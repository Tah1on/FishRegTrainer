const _0x104fe3=_0x3251;(function(_0xe3e8fd,_0x5dda01){const _0x479d88=_0x3251,_0x230778=_0xe3e8fd();while(!![]){try{const _0x2acc1a=parseInt(_0x479d88(0x7a))/0x1*(-parseInt(_0x479d88(0x84))/0x2)+parseInt(_0x479d88(0x7b))/0x3+-parseInt(_0x479d88(0xa0))/0x4*(parseInt(_0x479d88(0x77))/0x5)+parseInt(_0x479d88(0x9a))/0x6+-parseInt(_0x479d88(0x9e))/0x7*(parseInt(_0x479d88(0x96))/0x8)+-parseInt(_0x479d88(0x9c))/0x9+parseInt(_0x479d88(0x7d))/0xa;if(_0x2acc1a===_0x5dda01)break;else _0x230778['push'](_0x230778['shift']());}catch(_0x497650){_0x230778['push'](_0x230778['shift']());}}}(_0xcdca,0x8732b));function _0xcdca(){const _0x46ee43=['playerCards','livePlayerComb','allCombStraightDraw','flopFD','allBoardCombinations','action_size4','turnCard','check:\x20','push','\x20=>\x20','rank','flopBDSDout','actionBB','flopTypeSB','combs','CB\x2050%','BDFD','597475KGWWNW','handStrategyBB','CB\x2025%','29mCRJyV','2277111TDDgTI','playerAndTurn','12464270oINndG','clear','button','addEventListener','BDSD_out','shuffleDeck','click','2278YngIcq','strategySB','forEach','flopCards','comb','action_size2','flopBDFD','riverCard','strategyBB','NO\x20SD','flopSD','percent','action_size1','SD_out','flopTypeBB','CB\x2075%','NO\x20BDSD','check','51992ydqdTj','handStrategySB','getElementsByClassName','flopBDSD','2418120JJHeGK','combination','7674516zTdhbi','type','14ueFvbI','cardsArr','32sAIuPw','bet','playerAndRiver','flopSDout'];_0xcdca=function(){return _0x46ee43;};return _0xcdca();}import{DECK,VALUES,SUITS}from'./modules/deck.js';import{shuffle,dealCards}from'./modules/shuffleDeckDealCars.js';import{getCardsProp,countSuits,countValues,countIndexV}from'./modules/sortSeparateCount.js';import{defineFlopSB,defineFlopBB}from'./modules/defineFlopType.js';import{findCombination,findFlush,findStraight}from'./modules/findCombination.js';import{findFlushDraw,find_SD,find_BDSD}from'./modules/findDraw.js';import{changeAttributeSB,changeAttributeBB,clearClassName,getMainTable,matrixVS,bodyTable}from'./modules/matrix.js';import{possibleCombsMade,possibleCombsFlashDraw,possibleCombsStraightDraw,possibleCombsBDStraightDraw,getLivePlayerComb,findAllBoardCombinations,findAllFlashDraw,findAllStraightDraw,countAllCombination,findAll_BDSD}from'./modules/findAllHandsCombination.js';import{updateDeckHtml,updateComb,clearComb,displayPercentage,clearResultsPercentage}from'./modules/create_board_html.js';import{strategySBFlopCB,sumActionsSB,getCombinationActionSB}from'./strategy/sbFlopCB.js';function _0x3251(_0x5c083c,_0x54bdcf){const _0xcdcab9=_0xcdca();return _0x3251=function(_0x3251d9,_0x58961e){_0x3251d9=_0x3251d9-0x6b;let _0x2bbe77=_0xcdcab9[_0x3251d9];return _0x2bbe77;},_0x3251(_0x5c083c,_0x54bdcf);}import{strategyBBvFlopCB,sumActionsBB,getCombinationActionBB}from'./strategy/bbFlopvCB.js';import'./modules/test.js';const BOARD={'shuffleDeck':[],'flopCards':[],'turnCard':[],'riverCard':[]},HAND={'playerCards':[],'playerAndFlop':[],'playerAndTurn':[],'playerAndRiver':[]},REZ={'flopTypeSB':[],'flopTypeBB':[],'combination':[],'flopFD':[],'flopBDFD':[],'flopSD':[],'flopSDout':[],'flopBDSD':[],'flopBDSDout':[]},COMB={'livePlayerComb':[],'allBoardCombinations':[],'allCombFlashDraw':[],'allCombStraightDraw':[],'allCombBDStraightDraw':[]},ACTN={'handStrategy':'','strategySB':[],'strategyBB':[],'handStrategySB':[],'handStrategyBB':[]};export{BOARD,HAND,REZ,COMB,ACTN};function restartApp(){const _0x19ea5b=_0x3251;console[_0x19ea5b(0x7e)](),BOARD[_0x19ea5b(0x82)]=shuffle(DECK),HAND[_0x19ea5b(0xa4)]=dealCards(BOARD[_0x19ea5b(0x82)],0x2),BOARD[_0x19ea5b(0x87)]=dealCards(BOARD[_0x19ea5b(0x82)],0x3),BOARD['turnCard']=dealCards(BOARD['shuffleDeck'],0x1),BOARD[_0x19ea5b(0x8b)]=dealCards(BOARD[_0x19ea5b(0x82)],0x1),HAND['playerAndFlop']=[...HAND[_0x19ea5b(0xa4)],...BOARD[_0x19ea5b(0x87)]],HAND[_0x19ea5b(0x7c)]=[...HAND[_0x19ea5b(0xa4)],...BOARD[_0x19ea5b(0x87)],...BOARD[_0x19ea5b(0x6c)]],HAND[_0x19ea5b(0xa2)]=[...HAND[_0x19ea5b(0xa4)],...BOARD[_0x19ea5b(0x87)],...BOARD['turnCard'],...BOARD['riverCard']],REZ[_0x19ea5b(0x73)]=defineFlopSB(BOARD[_0x19ea5b(0x87)]),REZ[_0x19ea5b(0x92)]=defineFlopBB(BOARD['flopCards']),REZ['combination']=findCombination(HAND['playerCards'],BOARD[_0x19ea5b(0x87)])[_0x19ea5b(0x88)][_0x19ea5b(0x70)],REZ[_0x19ea5b(0xa7)]=findCombination(HAND[_0x19ea5b(0xa4)],BOARD[_0x19ea5b(0x87)])[_0x19ea5b(0x88)]['FD'],REZ[_0x19ea5b(0x8a)]=findCombination(HAND['playerCards'],BOARD[_0x19ea5b(0x87)])[_0x19ea5b(0x88)][_0x19ea5b(0x76)],REZ['flopSD']=findCombination(HAND[_0x19ea5b(0xa4)],BOARD['flopCards'])[_0x19ea5b(0x88)]['SD'],REZ[_0x19ea5b(0xa3)]=findCombination(HAND[_0x19ea5b(0xa4)],BOARD[_0x19ea5b(0x87)])['comb'][_0x19ea5b(0x91)],REZ['flopBDSD']=findCombination(HAND[_0x19ea5b(0xa4)],BOARD[_0x19ea5b(0x87)])[_0x19ea5b(0x88)]['BDSD'],REZ[_0x19ea5b(0x71)]=findCombination(HAND[_0x19ea5b(0xa4)],BOARD[_0x19ea5b(0x87)])[_0x19ea5b(0x88)][_0x19ea5b(0x81)],COMB[_0x19ea5b(0xa5)]=getLivePlayerComb(matrixVS,BOARD[_0x19ea5b(0x87)]),COMB[_0x19ea5b(0xa8)]=findAllBoardCombinations(possibleCombsMade,BOARD[_0x19ea5b(0x87)],COMB['livePlayerComb']),COMB[_0x19ea5b(0xa6)]=findAllStraightDraw(possibleCombsStraightDraw,COMB[_0x19ea5b(0xa8)]),COMB['allCombBDStraightDraw']=findAll_BDSD(possibleCombsBDStraightDraw,COMB[_0x19ea5b(0xa8)]),COMB[_0x19ea5b(0xa8)]=strategySBFlopCB(REZ[_0x19ea5b(0x73)],COMB[_0x19ea5b(0xa8)]),COMB[_0x19ea5b(0xa8)]=strategyBBvFlopCB(REZ[_0x19ea5b(0x92)],COMB[_0x19ea5b(0xa8)]),ACTN[_0x19ea5b(0x85)]=sumActionsSB(COMB[_0x19ea5b(0xa8)]),ACTN[_0x19ea5b(0x8c)]=sumActionsBB(COMB[_0x19ea5b(0xa8)]),ACTN[_0x19ea5b(0x97)]=getCombinationActionSB(COMB[_0x19ea5b(0xa8)],REZ[_0x19ea5b(0x9b)],HAND['playerCards']),ACTN[_0x19ea5b(0x78)]=getCombinationActionBB(COMB[_0x19ea5b(0xa8)],REZ['combination'],HAND[_0x19ea5b(0xa4)]);let _0x4358e0={};COMB[_0x19ea5b(0xa8)][_0x19ea5b(0x86)](_0x3fdca9=>{const _0x29ae37=_0x19ea5b;_0x3fdca9[_0x29ae37(0x74)]['forEach'](_0x1eb928=>{const _0x2dfd54=_0x29ae37;!_0x4358e0[_0x1eb928[_0x2dfd54(0x72)][_0x2dfd54(0x9d)]]&&(_0x4358e0[_0x1eb928[_0x2dfd54(0x72)][_0x2dfd54(0x9d)]]={'count':0x0,'cardsArr':[]}),_0x4358e0[_0x1eb928['actionBB'][_0x2dfd54(0x9d)]]['count']++,_0x4358e0[_0x1eb928[_0x2dfd54(0x72)]['type']][_0x2dfd54(0x9f)][_0x2dfd54(0x6e)](_0x1eb928['holeCards']['cards']);});}),updateDeckHtml(BOARD[_0x19ea5b(0x87)],HAND[_0x19ea5b(0xa4)]),clearClassName(bodyTable),clearResultsPercentage(),clearComb();}function errorApp(){const _0x505872=_0x3251;updateComb(REZ[_0x505872(0x73)],REZ['combination']+':\x20'+ACTN['handStrategySB'],REZ['flopFD']==='NO\x20FD'?'':REZ[_0x505872(0xa7)],REZ[_0x505872(0x8a)],REZ[_0x505872(0x8e)]===''||REZ[_0x505872(0x8e)]===_0x505872(0x8d)?'':REZ[_0x505872(0x8e)]+_0x505872(0x6f)+REZ['flopSDout'],REZ[_0x505872(0x99)]===_0x505872(0x94)?_0x505872(0x94):REZ[_0x505872(0x99)]===''?'':REZ[_0x505872(0x99)]+_0x505872(0x6f)+REZ[_0x505872(0x71)],_0x505872(0x6d)+ACTN[_0x505872(0x85)][_0x505872(0x95)]['percent']+'%\x20/\x20CB:\x20'+ACTN[_0x505872(0x85)][_0x505872(0xa1)][_0x505872(0x8f)]+'%\x20'),changeAttributeSB(bodyTable),displayPercentage(COMB['allBoardCombinations']);}let shuffButton=document[_0x104fe3(0x98)](_0x104fe3(0x7f));shuffButton[0x0][_0x104fe3(0x80)](_0x104fe3(0x83),function(){const _0x1f58f9=_0x104fe3;console[_0x1f58f9(0x7e)](),restartApp();});let checkButton=document[_0x104fe3(0x98)](_0x104fe3(0x90));checkButton[0x0]['addEventListener'](_0x104fe3(0x83),function(){const _0x2fc887=_0x104fe3;ACTN[_0x2fc887(0x97)]===_0x2fc887(0x95)?restartApp():errorApp();});let size25Button=document['getElementsByClassName'](_0x104fe3(0x89));size25Button[0x0][_0x104fe3(0x80)](_0x104fe3(0x83),function(){const _0x253cb8=_0x104fe3;ACTN[_0x253cb8(0x97)]===_0x253cb8(0x79)?restartApp():errorApp();});let size50Button=document[_0x104fe3(0x98)]('action_size3');size50Button[0x0][_0x104fe3(0x80)](_0x104fe3(0x83),function(){const _0xd1759b=_0x104fe3;ACTN[_0xd1759b(0x97)]===_0xd1759b(0x75)?restartApp():errorApp();});let size75Button=document['getElementsByClassName'](_0x104fe3(0x6b));size75Button[0x0]['addEventListener'](_0x104fe3(0x83),function(){const _0x5a47b2=_0x104fe3;ACTN[_0x5a47b2(0x97)]===_0x5a47b2(0x93)?restartApp():errorApp();});